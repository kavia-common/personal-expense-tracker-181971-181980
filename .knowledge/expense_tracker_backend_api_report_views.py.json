{"is_source_file": true, "format": "Python", "description": "This file defines API views for generating expense reports and budget status summaries for a personal expense tracker application. It includes functions to parse date filters, apply filters to expense queries, and produce aggregated data grouped by category or month, as well as budget utilization details. The code interacts with Django ORM models Expense and Budget, and uses Django REST Framework decorators for API endpoints.", "external_files": ["django.db.models", "django.db.models.functions", "rest_framework.decorators", "rest_framework.permissions", "rest_framework.response", ".models"], "external_methods": ["django.db.models.Sum", "django.db.models.F", "django.db.models.functions.TruncMonth", "rest_framework.decorators.api_view", "rest_framework.permissions.permission_classes", "rest_framework.response.Response", "Expense.objects.select_related", "Budget.objects.select_related"], "published": ["reports_summary", "reports_budget_status"], "classes": [], "methods": [{"name": "datetime|None _parse_date(value: str | None)", "description": "Parses a date string in YYYY-MM-DD format into a datetime.date object; returns None if invalid or missing.", "scope": "", "scopeKind": ""}, {"name": "_apply_expense_filters(qs, user, start_date, end_date, category_id)", "description": "Applies user, date range, and category filters to an Expense queryset.", "scope": "", "scopeKind": ""}, {"name": "reports_summary(request)", "description": "API view that returns a summary of expenses grouped by category or month, including total amounts and currency info.", "scope": "", "scopeKind": ""}, {"name": "reports_budget_status(request)", "description": "API view that returns budget utilization details, including expenses within budget periods and status indicators.", "scope": "", "scopeKind": ""}], "calls": ["Expense.objects.select_related", "Expense.objects.filter", "Expense.objects.aggregate", "Expense.objects.annotate", "Expense.objects.values", "Expense.objects.values_list", "Budget.objects.select_related", "Budget.objects.filter", "Decimal('0')", "str()", "list()"], "search-terms": ["API reports", "expenses summary", "budget status", "Django ORM", "expense filtering", "group_by category", "group_by month", "budget utilization", "expense date parsing", "expense aggregation"], "state": 2, "file_id": 23, "knowledge_revision": 64, "git_revision": "4c746e12c34060592b6e761c4ffdacefea7891ff", "revision_history": [{"62": "4c746e12c34060592b6e761c4ffdacefea7891ff"}, {"64": "4c746e12c34060592b6e761c4ffdacefea7891ff"}], "ctags": [{"_type": "tag", "name": "_apply_expense_filters", "path": "/home/kavia/workspace/code-generation/personal-expense-tracker-181971-181980/expense_tracker_backend/api/report_views.py", "pattern": "/^def _apply_expense_filters(qs, user, start_date, end_date, category_id):$/", "language": "Python", "kind": "function", "signature": "(qs, user, start_date, end_date, category_id)"}, {"_type": "tag", "name": "_parse_date", "path": "/home/kavia/workspace/code-generation/personal-expense-tracker-181971-181980/expense_tracker_backend/api/report_views.py", "pattern": "/^def _parse_date(value: str | None) -> datetime | None:$/", "language": "Python", "typeref": "typename:datetime|None", "kind": "function", "signature": "(value: str | None)"}, {"_type": "tag", "name": "reports_budget_status", "path": "/home/kavia/workspace/code-generation/personal-expense-tracker-181971-181980/expense_tracker_backend/api/report_views.py", "pattern": "/^def reports_budget_status(request):$/", "language": "Python", "kind": "function", "signature": "(request)"}, {"_type": "tag", "name": "reports_summary", "path": "/home/kavia/workspace/code-generation/personal-expense-tracker-181971-181980/expense_tracker_backend/api/report_views.py", "pattern": "/^def reports_summary(request):$/", "language": "Python", "kind": "function", "signature": "(request)"}], "hash": "28fa2fdd2c5ba5aee6a0783f86f88d93", "format-version": 4, "code-base-name": "expense_tracker_backend", "filename": "expense_tracker_backend/api/report_views.py"}