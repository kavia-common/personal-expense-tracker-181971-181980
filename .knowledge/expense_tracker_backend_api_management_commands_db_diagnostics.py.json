{"is_source_file": true, "format": "Python", "description": "This source file defines a Django management command named 'db_diagnostics' which diagnoses database configuration and connectivity issues. It includes functions to extract database settings from Django's settings and environment variables, parse a database URL, and attempt direct connections to the database using psycopg (either version 3 or fallback to psycopg2). The command outputs detailed information about the current database configuration and whether a direct connection can be established.", "external_files": ["django.core.management.base", "django.conf.settings", "os", "sys", "urllib.parse.urlparse", "psycopg", "psycopg2"], "external_methods": ["settings.DATABASES.get", "os.getenv", "urlparse", "psycopg.connect", "psycopg2.connect"], "published": ["Command"], "classes": [{"name": "Command", "description": "A Django management command class that performs database configuration diagnostics and connectivity tests."}], "methods": [{"name": "_effective_db_settings()", "description": "Extracts the effective Django database configuration for the default database.", "scope": "", "scopeKind": ""}, {"name": "_get_env_db_values()", "description": "Collects environment variables that influence database configuration.", "scope": "", "scopeKind": ""}, {"name": "_parse_database_url(db_url: str)", "description": "Parses the database URL into its components for inspection.", "scope": "", "scopeKind": ""}, {"name": "_try_psycopg_connect()", "description": "Attempts a direct database connection using psycopg3 or psycopg2 to verify connectivity.", "scope": "", "scopeKind": ""}, {"name": "handle(self, *args, **options)", "description": "Main method executed when the command runs; it outputs database configuration details and connectivity status.", "scope": "Command", "scopeKind": "class"}], "calls": ["settings.DATABASES.get", "os.getenv", "urlparse", "psycopg.connect", "psycopg2.connect"], "search-terms": ["db_diagnostics", "PostgreSQL connection check", "Database URL parsing", "Django database settings", "Psycopg connectivity test"], "state": 2, "file_id": 28, "knowledge_revision": 81, "git_revision": "", "ctags": [{"_type": "tag", "name": "Command", "path": "/home/kavia/workspace/code-generation/personal-expense-tracker-181971-181980/expense_tracker_backend/api/management/commands/db_diagnostics.py", "pattern": "/^class Command(BaseCommand):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_effective_db_settings", "path": "/home/kavia/workspace/code-generation/personal-expense-tracker-181971-181980/expense_tracker_backend/api/management/commands/db_diagnostics.py", "pattern": "/^def _effective_db_settings():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_get_env_db_values", "path": "/home/kavia/workspace/code-generation/personal-expense-tracker-181971-181980/expense_tracker_backend/api/management/commands/db_diagnostics.py", "pattern": "/^def _get_env_db_values():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_parse_database_url", "path": "/home/kavia/workspace/code-generation/personal-expense-tracker-181971-181980/expense_tracker_backend/api/management/commands/db_diagnostics.py", "pattern": "/^def _parse_database_url(db_url: str):$/", "language": "Python", "kind": "function", "signature": "(db_url: str)"}, {"_type": "tag", "name": "_try_psycopg_connect", "path": "/home/kavia/workspace/code-generation/personal-expense-tracker-181971-181980/expense_tracker_backend/api/management/commands/db_diagnostics.py", "pattern": "/^def _try_psycopg_connect():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "handle", "path": "/home/kavia/workspace/code-generation/personal-expense-tracker-181971-181980/expense_tracker_backend/api/management/commands/db_diagnostics.py", "pattern": "/^    def handle(self, *args, **options):$/", "language": "Python", "kind": "member", "signature": "(self, *args, **options)", "scope": "Command", "scopeKind": "class"}, {"_type": "tag", "name": "help", "path": "/home/kavia/workspace/code-generation/personal-expense-tracker-181971-181980/expense_tracker_backend/api/management/commands/db_diagnostics.py", "pattern": "/^    help = \"Diagnose database configuration and connectivity.\"$/", "language": "Python", "kind": "variable", "scope": "Command", "scopeKind": "class"}], "hash": "ad81e5cf5f658d604cf70f64dc5482e6", "format-version": 4, "code-base-name": "expense_tracker_backend", "filename": "expense_tracker_backend/api/management/commands/db_diagnostics.py", "fields": [{"name": "help = \"Diagnose database configuration and connectivity.\"", "scope": "Command", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"81": ""}]}