{"is_source_file": true, "format": "Python", "description": "This is a Django management command module that implements a command to wait for the database to become available before proceeding. It repeatedly attempts to establish a database connection and retrieves a cursor, handling specific database connection exceptions, and provides configurable timeout and sleep interval options.", "external_files": ["django.core.management.base.BaseCommand", "django.db.connections", "django.db.utils.OperationalError", "django.db.utils.InterfaceError", "django.db.utils.ProgrammingError", "os", "time"], "external_methods": ["connections[\"default\"].cursor()", "os.getenv()", "time.time()", "time.sleep()"], "published": ["Command"], "classes": [{"name": "Command", "description": "A Django management command class that waits for the database to be available by attempting connection and cursor creation repeatedly until success or timeout."}], "methods": [{"name": "add_arguments(self, parser)", "description": "Defines command-line arguments '--timeout' and '--sleep-interval' for configuring the wait timeout and retry interval.", "scope": "Command", "scopeKind": "class"}, {"name": "handle(self, *args, **options)", "description": "Main method that performs the wait logic by attempting to connect to the database, retrying on specific exceptions, and respecting timeout constraints.", "scope": "Command", "scopeKind": "class"}], "calls": ["connections[\"default\"].cursor", "os.getenv", "time.time", "time.sleep"], "search-terms": ["wait_for_db", "Django management command", "database connection retry", "connection exceptions", "timeout handling"], "state": 2, "file_id": 25, "knowledge_revision": 83, "git_revision": "ee0b0916fc5c3deba3a78f8d0d00acf3460f03b2", "revision_history": [{"74": ""}, {"83": "ee0b0916fc5c3deba3a78f8d0d00acf3460f03b2"}], "ctags": [{"_type": "tag", "name": "Command", "path": "/home/kavia/workspace/code-generation/personal-expense-tracker-181971-181980/expense_tracker_backend/api/management/commands/wait_for_db.py", "pattern": "/^class Command(BaseCommand):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "add_arguments", "path": "/home/kavia/workspace/code-generation/personal-expense-tracker-181971-181980/expense_tracker_backend/api/management/commands/wait_for_db.py", "pattern": "/^    def add_arguments(self, parser):$/", "language": "Python", "kind": "member", "signature": "(self, parser)", "scope": "Command", "scopeKind": "class"}, {"_type": "tag", "name": "handle", "path": "/home/kavia/workspace/code-generation/personal-expense-tracker-181971-181980/expense_tracker_backend/api/management/commands/wait_for_db.py", "pattern": "/^    def handle(self, *args, **options):$/", "language": "Python", "kind": "member", "signature": "(self, *args, **options)", "scope": "Command", "scopeKind": "class"}, {"_type": "tag", "name": "help", "path": "/home/kavia/workspace/code-generation/personal-expense-tracker-181971-181980/expense_tracker_backend/api/management/commands/wait_for_db.py", "pattern": "/^    help = \"Wait for database to become available.\"$/", "language": "Python", "kind": "variable", "scope": "Command", "scopeKind": "class"}], "hash": "c19b19284fca3abf2a93cee6c618452e", "format-version": 4, "code-base-name": "expense_tracker_backend", "filename": "expense_tracker_backend/api/management/commands/wait_for_db.py", "fields": [{"name": "help = \"Wait for database to become available.\"", "scope": "Command", "scopeKind": "class", "description": "unavailable"}]}