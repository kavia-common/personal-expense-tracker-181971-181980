{"is_source_file": true, "format": "Python", "description": "This file defines a Django custom management command `wait_for_db` that waits for a specified database to become available before proceeding. It attempts to connect repeatedly within a timeout period, providing visibility into the database configuration via environment variables, and handles common database connection errors.", "external_files": ["django.core.management.base.BaseCommand", "django.db.connections", "django.db.utils.OperationalError", "django.db.utils.InterfaceError", "django.db.utils.ProgrammingError"], "external_methods": ["connections[\"default\"].cursor()", "os.getenv", "time.time", "time.sleep", "self.stdout.write", "self.style.NOTICE", "self.style.ERROR", "self.style.SUCCESS"], "published": ["Command"], "classes": [{"name": "Command", "description": "Custom Django management command that waits for the database to be available by attempting to establish a cursor connection repeatedly until success or timeout."}], "methods": [{"name": "add_arguments(self, parser)", "description": "Defines command-line arguments for timeout and sleep interval.", "scope": "Command", "scopeKind": "class"}, {"name": "handle(self, *args, **options)", "description": "Main logic that waits for the database to become available, handling connection errors and timeout.", "scope": "Command", "scopeKind": "class"}], "calls": ["connections[\"default\"].cursor()", "os.getenv", "time.time", "time.sleep", "self.stdout.write", "self.style.NOTICE", "self.style.ERROR", "self.style.SUCCESS"], "search-terms": ["wait_for_db", "django management command", "database connection retry", "wait for database to be ready", "Python Django database wait"], "state": 2, "file_id": 25, "knowledge_revision": 74, "git_revision": "", "ctags": [{"_type": "tag", "name": "Command", "path": "/home/kavia/workspace/code-generation/personal-expense-tracker-181971-181980/expense_tracker_backend/api/management/commands/wait_for_db.py", "pattern": "/^class Command(BaseCommand):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "add_arguments", "path": "/home/kavia/workspace/code-generation/personal-expense-tracker-181971-181980/expense_tracker_backend/api/management/commands/wait_for_db.py", "pattern": "/^    def add_arguments(self, parser):$/", "language": "Python", "kind": "member", "signature": "(self, parser)", "scope": "Command", "scopeKind": "class"}, {"_type": "tag", "name": "handle", "path": "/home/kavia/workspace/code-generation/personal-expense-tracker-181971-181980/expense_tracker_backend/api/management/commands/wait_for_db.py", "pattern": "/^    def handle(self, *args, **options):$/", "language": "Python", "kind": "member", "signature": "(self, *args, **options)", "scope": "Command", "scopeKind": "class"}, {"_type": "tag", "name": "help", "path": "/home/kavia/workspace/code-generation/personal-expense-tracker-181971-181980/expense_tracker_backend/api/management/commands/wait_for_db.py", "pattern": "/^    help = \"Wait for database to become available.\"$/", "language": "Python", "kind": "variable", "scope": "Command", "scopeKind": "class"}], "hash": "b5811f5459fa4838f362e6a0529723ec", "format-version": 4, "code-base-name": "expense_tracker_backend", "filename": "expense_tracker_backend/api/management/commands/wait_for_db.py", "fields": [{"name": "help = \"Wait for database to become available.\"", "scope": "Command", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"74": ""}]}